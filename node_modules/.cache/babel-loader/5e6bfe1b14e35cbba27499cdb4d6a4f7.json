{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport toast from '../helpers/toast';\nimport useGlobalContext from \"./useGlobalContext\";\n\nfunction useRequests() {\n  _s();\n\n  const {\n    token\n  } = useGlobalContext();\n  const baseUrl = \"https://api-desafiom05.herokuapp.com\";\n\n  async function get(route) {\n    try {\n      const response = await fetch(`${baseUrl}/${route}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      return data;\n    } catch (error) {\n      toast.messageError(error.message);\n      return false;\n    }\n  }\n\n  async function getOne(route, id) {\n    try {\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      return data;\n    } catch (error) {\n      toast.messageError(error.message);\n      return false;\n    }\n  }\n\n  async function post(route, body, withToken) {\n    const config = withToken ? {\n      'Authorization': `Bearer ${token}`\n    } : {};\n\n    try {\n      const response = await fetch(`${baseUrl}/${route}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...config\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      return data;\n    } catch (error) {\n      toast.messageError(error.message);\n      return false;\n    }\n  }\n\n  async function del(route, id) {\n    try {\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      return data;\n    } catch (error) {\n      toast.messageError(error.message);\n      return false;\n    }\n  }\n\n  async function put(route, body, id) {\n    try {\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      return data;\n    } catch (error) {\n      toast.messageError(error.message);\n      return false;\n    }\n  }\n\n  return {\n    get,\n    getOne,\n    post,\n    del,\n    put\n  };\n}\n\n_s(useRequests, \"wn6bIDTzZPhXYqMb9xPXbbfqmk8=\", false, function () {\n  return [useGlobalContext];\n});\n\nexport default useRequests;","map":{"version":3,"sources":["C:/Desafio5/front-integral-m05-desafio/desafio-m05/src/hooks/useRequests.js"],"names":["toast","useGlobalContext","useRequests","token","baseUrl","get","route","response","fetch","method","headers","data","json","ok","Error","message","error","messageError","getOne","id","post","body","withToken","config","JSON","stringify","del","put"],"mappings":"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","sourcesContent":["import toast from '../helpers/toast';\r\nimport useGlobalContext from \"./useGlobalContext\";\r\n\r\nfunction useRequests() {\r\n  const {token} = useGlobalContext();\r\n  const baseUrl = \"https://api-desafiom05.herokuapp.com\";\r\n\r\n  async function get(route) {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${route}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message)\r\n      }\r\n      return data;\r\n\r\n    } catch (error) {\r\n      toast.messageError(error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function getOne(route, id) {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message)\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      toast.messageError(error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function post(route, body, withToken) {\r\n\r\n    const config = withToken ? {\r\n      'Authorization': `Bearer ${token}`\r\n    } : {}\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${route}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...config,\r\n        },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message)\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      toast.messageError(error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function del(route, id) {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message)\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      toast.messageError(error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async function put(route, body, id) {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/${route}/${id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message)\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      toast.messageError(error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return {\r\n    get,\r\n    getOne,\r\n    post,\r\n    del,\r\n    put\r\n  }\r\n}\r\n\r\nexport default useRequests;"]},"metadata":{},"sourceType":"module"}